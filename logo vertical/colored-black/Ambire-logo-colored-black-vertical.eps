%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 126 128 299 296 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2019 (64-Bit)
%%Title: Ambire-logo-colored-black-ver...
%%CreationDate: Fri Feb 18 15:54:42 2022
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2019 (64-Bit) Version 21.0.0.593
/EpsFile true def
%%BeginResource: procset wCorel21Dict 21.0 0
/wCorel21Dict 300 dict def wCorel21Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%---------------------------------------------------------------------------
% Fountain fill support
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/is_rainbow_fill{
blendMode dup 1 eq exch 2 eq or}bd/bias_function{/rateAcceleration exch def
/midPoint exch def/rateMethod exch def/parameter exch def rateAcceleration 1.0
eq{/rateAcceleration 0.999 def}if rateAcceleration -1.0 eq{/rateAcceleration
-0.999 def}if rateAcceleration abs 1.0 ne{parameter dup 2 mul 1 sub
rateAcceleration 2.0 mul mul exch dup 0.5 lt{exch rateAcceleration 1.0 add add
exch rateAcceleration 1.0 add mul exch div}{rateAcceleration 1.0 add mul 1
index exch sub exch rateAcceleration 1.0 add sub div}ifelse}if}bind def
/get_blending_factor{/rateAcceleration exch def/midPoint exch def/rateMethod
exch def/sample_x exch def rateMethod 2 eq{}if rateMethod 1 eq{sample_x
rateMethod midPoint rateAcceleration bias_function}if rateMethod 0 eq{sample_x
dup midPoint lt{0.5 midPoint div mul}{midPoint 1.0 eq sample_x 1.0 eq and{pop
1.0}{0.5 1.0 midPoint sub div exch midPoint sub mul 0.5 add}ifelse}ifelse}if
}bd/calculate_intermediate_gradient_colors{/rateAcceleration exch def
/rateValue exch def/rateMethod exch def/blendMode exch def/stepsCount exch def
/color_to_tmp exch def/color_from_tmp exch def is_rainbow_fill{color_from_tmp
convert_colorspec_to_hsb/color_from_tmp exch def color_to_tmp
convert_colorspec_to_hsb/color_to_tmp exch def}if/channelsCount_local
color_from_tmp/num get def/colorDeltas[0 1 channelsCount_local 1 sub{
/channelIndex exch def color_to_tmp/color get channelIndex get color_from_tmp
/color get channelIndex get sub}for]def is_rainbow_fill{colorDeltas 0 get dup 0
eq{pop blendMode 2 eq{0.99}{-0.99}ifelse}if dup blendMode 2 eq exch 0 lt and{1
add}if dup blendMode 1 eq exch 0 gt and{1 sub}if colorDeltas 0 3 -1 roll put}
if/intermediateColors channelsCount_local stepsCount mul array def 0 1
stepsCount 1 sub{/stepIndex exch def/blendingFactor stepIndex stepsCount 1 sub
div rateMethod rateValue rateAcceleration get_blending_factor def 0 1
channelsCount_local 1 sub{/channelIndex exch def color_from_tmp/color get
channelIndex get colorDeltas channelIndex get blendingFactor mul add
intermediateColors channelsCount_local stepIndex mul channelIndex add 3 -1 roll
put}for}for is_rainbow_fill{[0 3 intermediateColors length 3 sub{
intermediateColors exch 3 getinterval aload pop hsb2rgb GradientColorSpace
DocCmykSpace eq{rgb2cmyk}if}for]}{intermediateColors}ifelse}bind def
/convert_colorspec_to_hsb{GradientColorSpace DocRgbSpace eq{/color get aload
pop}{/convert_to_cmyk dexec/color get aload pop cmyk2rgb}ifelse rgb2hsb
create_hsb_color}bd/fill_linear{1 index 4 index sub dup $pad mul dup/$pdw xd 2
mul sub $fst div/$wid xd 2 index sub/$hei xd pop Tl/stepsCount $fse $fss sub
def grad_color_from grad_color_to stepsCount blendMode rateMethod rateValue
rateAcceleration calculate_intermediate_gradient_colors/stripColors exch def
/intermediateColor grad_color_from dup length dict copy def intermediateColor
set_solid_fill $fss 0 eq{n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp F}if $fss
$wid mul $pdw add 0 Tl 0 1 stepsCount 1 sub{/stripIndex exch def n 0 0 m 0 $hei
l $wid $hei l $wid 0 l @cp/channelsCount intermediateColor/num get def
stripColors stripIndex channelsCount mul channelsCount getinterval
intermediateColor begin color copy pop end intermediateColor set_solid_fill F
$wid 0 Tl}for n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp grad_color_to
set_solid_fill F}bd/fill_radial_square{1 index 4 index sub dup $rox mul/$row xd
2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul exch dup
mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst div/$wid
xd 4 index add $roh add exch 5 index add $row add exch Tl apply_fountain_params
pop pop pop pop/stepsCount $fse $fss sub def grad_color_from grad_color_to
stepsCount blendMode rateMethod rateValue rateAcceleration
calculate_intermediate_gradient_colors/stripColors exch def/intermediateColor
grad_color_from dup length dict copy def intermediateColor set_solid_fill $fss
0 eq{$fty 4 eq{$hei dup neg dup m 2 mul @sqr}{0 0 m 0 0 $hei 0 360 arc}ifelse F
}if 1.0 $pad 2 mul sub dup scale $hei $fss $wid mul sub/$hei xd 0 1 stepsCount
1 sub{/stripIndex exch def $fty 4 eq{n $hei dup neg dup m 2 mul @sqr}{n 0 0 m 0
0 $hei 0 360 arc}ifelse/channelsCount intermediateColor/num get def stripColors
stripIndex channelsCount mul channelsCount getinterval intermediateColor begin
color copy pop end intermediateColor set_solid_fill F/$hei $hei $wid sub def}
for}bd/fill_conical{1 index 4 index sub dup $rox mul/$row xd 2 div 1 index 4
index sub dup $roy mul/$roh xd 2 div 2 copy dup mul exch dup mul add sqrt $row
dup mul $roh dup mul add sqrt add dup/$hei xd $fst div/$wid xd 4 index add $roh
add exch 5 index add $row add exch Tl pop pop pop pop/stepsCount $fse $fss sub
def grad_color_from grad_color_to stepsCount blendMode rateMethod rateValue
rateAcceleration calculate_intermediate_gradient_colors/stripColors exch def
/intermediateColor grad_color_from dup length dict copy def intermediateColor
set_solid_fill $fss 0 eq{F}{n}ifelse/$dang 180 $fst 1 sub div def/$sang $dang
-2 div def/$eang $dang 2 div def/$sang $sang $dang $fss mul add def/$eang $eang
$dang $fss mul add def/$sang $eang $dang sub def 0 1 stepsCount 1 sub{
/stripIndex exch def n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
/channelsCount intermediateColor/num get def stripColors stripIndex
channelsCount mul channelsCount getinterval intermediateColor begin color copy
pop end intermediateColor set_solid_fill F 0 0 m 0 0 $hei $eang neg $fan add
$sang neg $fan add arc F/$sang $eang def/$eang $eang $dang add def}for}bd
/adjust_gradient_steps{72 0 matrix defaultmatrix dtransform exch dup mul exch
dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 in_range
$fsc 1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{
opt$fst dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop
pop}ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll
div exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/gradient_fill{
/old$fst $fst def/$adj 1 def/$fss 0 def FillOverprint safe_setoverprint
get_gradient_use_shading{output_shading_gradient}{AutoSteps 0 gt
{adjust_gradient_steps}if $fty dup 3 eq exch 4 eq or{@gs wclip $fsa 0 get
set_solid_fill F @gr}if 1 1 $fsc 1 sub{/nColor exch def $fsa nColor 1 sub 6 mul
get/grad_color_from exch def $fsa nColor 6 mul get/grad_color_to exch def $fsa
nColor 6 mul 1 add get $adj mul cvi $fss add/$fse xd $fsa nColor 1 sub 6 mul 2
add get/blendMode exch def $fsa nColor 1 sub 6 mul 3 add get/rateMethod exch
def $fsa nColor 1 sub 6 mul 4 add get dup/rateValue exch def/$fmp exch def $fsa
nColor 1 sub 6 mul 5 add get/rateAcceleration exch def @sv $ctm setmatrix wclip
Bbllx Bblly Bburx Bbury $fty 6 eq{fill_conical}{1 index 3 index m 2 copy l 3
index 1 index l 3 index 3 index l @cp $fty dup 3 eq exch 4 eq or{
fill_radial_square}{pop pop pop pop apply_fountain_params pathbbox fill_linear
}ifelse}ifelse @rs/$fss $fse def}for @np}ifelse/$fst old$fst def}bd
/set_gradient{/$fil 2 def/$fsy xd/$fsx xd/$fsk xd/$fan xd/$roy xd/$rox xd/$pad
xd/$fy1 xd/$fx1 xd/$fy0 xd/$fx0 xd/$fty xd/$fst xd/$fsc xd/$fsa xd}bd
/get_gradient_use_shading{$fty 2 eq $fty 3 eq or $fty 4 eq or $fty 6 eq or
Level3 and FillOverprint 0 eq and ColorSeparationLevel1 not and}bd
/apply_fountain_params{$fan rotate[$fsx $fsy $fsk mul 0 $fsy 0 0]concat}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
%----------------------------------------------------------------------------
%	Level3 Shaded Fills
/output_mesh{10 dict begin/ShadingType 6 def/ColorSpace ShadingColorSpace
set_shading_colorspace def/DataSource ShadingDataSource def currentdict end
shfill}bd/set_shading_colorspace{SeparationMode/OnHost eq{pop SeparateInColor{
DocCmykSpace}{DocGrayScaleSpace}ifelse}if}bd/separate_shading_color{
SeparationMode/OnHost eq{/separate_color dexec not{pop SeparateInColor{0 0 0 0
create_cmyk_color}{1 create_grayscale_color}ifelse}if}if}bd/set_shading_color{
SeparationMode/OnHost eq{/separate_color dexec{begin color aload pop end}{pop
SeparateInColor{0 0 0 0}{1}ifelse}ifelse}{begin color aload pop end}ifelse}bd
/set_linear_gradient_parameters{/Coords[$fx0 $fy0 $fx1 $fy1]}def
/calculate_gradient_bbox_parameters{flattenpath pathbbox/$y1 xd/$x1 xd/$y0 xd
/$x0 xd $x1 $x0 sub/$width xd $y1 $y0 sub/$height xd $rox $width mul/$row xd
$roy $height mul/$roh xd $x0 $width 2 div add/$x0 xd $y0 $height 2 div add/$y0
xd $x0 $row add/$x0 xd $y0 $roh add/$y0 xd $x0/$x1 xd $y0/$y1 xd $width dup mul
$height dup mul add sqrt 2 div $row dup mul $roh dup mul add sqrt add 1 $pad 2
mul sub mul/$rad0 xd 0/$rad1 xd}def/set_radial_gradient_parameters{
calculate_gradient_bbox_parameters $x0 $y0 translate apply_fountain_params 0
$x0 sub 0 $y0 sub translate/Coords[$x0 $y0 $rad0 $x1 $y1 $rad1]}def
/set_square_gradient_parameters{calculate_gradient_bbox_parameters $x0 $y0
translate apply_fountain_params $rad0/$x1 xd $x1 neg/$x0 xd $rad0/$y1 xd $y1
neg/$y0 xd/BitsPerFlag 8/BitsPerCoordinate 8/BitsPerComponent 16 $fsa 0 get
/num get/numColorChannels exch def/Decode[numColorChannels 1 sub{0 1}repeat]
/BBox[0 0 1 1]/DataSource < 00 80 80 FFFF 00 FF FF 0000 00 00 FF 0000 02 00 00
0000 02 FF 00 0000 02 FF FF 0000 > $width 2 div -1 mul $height 2 div -1 mul
translate $width $height scale}def/set_conical_gradient_parameters{
calculate_gradient_bbox_parameters $x0 $y0 translate apply_fountain_params
$width 0.5 $rox abs add mul $fsx div dup mul $height 0.5 $roy abs add mul $fsx
div dup mul add sqrt 2 mul/fillScaleFactor exch def fillScaleFactor 2 div -1
mul dup translate fillScaleFactor dup scale/BitsPerFlag 8/BitsPerCoordinate 8
/BitsPerComponent 16 $fsa 0 get/num get/numColorChannels exch def/Decode[
numColorChannels 1 sub{0 1}repeat]/BBox[0 0 1 1]/DataSource < 00 80 80 AA 80 D5
80 FF 80 FF C6 C6 FF 80 FF 80 D5 80 AA 80 80 80 80 80 80 00 00 00 00 80 00 80
00 00 80 80 80 AA 80 D5 80 FF 39 FF 00 C6 00 80 2B 80 55 80 80 80 80 80 80 80
80 00 80 00 FF FF FF FF 00 80 80 80 55 80 2B 80 00 39 00 00 39 00 80 2B 80 55
80 80 80 80 80 80 80 80 00 80 00 FF FF FF FF 00 80 80 AA 80 D5 80 FF 80 FF 39
C6 00 80 00 80 2B 80 55 80 80 80 80 80 80 00 00 00 00 80 00 80 00 >}def
/create_color_blending_function{/rateAcceleration exch def/rateValue exch def
/rateMethod exch def/blendMode exch def/colorN1 exch separate_shading_color def
/colorN0 exch separate_shading_color def/samplesCount 100 def rateValue 0.5 eq
rateMethod 0 eq and{/samplesCount 2 def}if/channelsCount colorN0/num get def
/codecArray[channelsCount{0 1}repeat]def/colorDataSourceLength channelsCount
samplesCount mul def/colorsDataSource colorDataSourceLength string def colorN0
colorN1 samplesCount blendMode rateMethod rateValue rateAcceleration
calculate_intermediate_gradient_colors/colorBands exch def 0 1 samplesCount 1
sub{/sampleIndex exch def 0 1 channelsCount 1 sub{/channelIndex exch def
colorBands sampleIndex channelsCount mul channelIndex add get 255 mul cvi
colorsDataSource sampleIndex channelsCount mul channelIndex add 3 -1 roll put}
for}for <</FunctionType 0/Order 3/Domain[0 1]/Encode[0 samplesCount 1 sub]
/Range codecArray/Decode codecArray/DataSource colorsDataSource/BitsPerSample 8
/Size[samplesCount]>>}bind def/create_gradient_shading_dict{<</ShadingType $fty
/ColorSpace GradientColorSpace set_shading_colorspace/Domain[0 1]$fty 2 eq{
set_linear_gradient_parameters}{$fty 3 eq{set_radial_gradient_parameters}{$fty
4 eq{set_square_gradient_parameters}{$fty 6 eq{set_conical_gradient_parameters
}if}ifelse}ifelse}ifelse/Function <</FunctionType 3/Domain[0 1]/Functions[0 1
$fsc 2 sub{/nColor exch def $fsa nColor 6 mul get $fsa nColor 1 add 6 mul get
$fsa nColor 6 mul 2 add get $fsa nColor 6 mul 3 add get $fsa nColor 6 mul 4 add
get $fsa nColor 6 mul 5 add get create_color_blending_function}for]/Encode[
$fsc 1 sub{0 1}repeat]/Bounds[$fsc 2 gt{1 1 $fsc 2 sub{/nColor exch def
/nBandPos 0 def 0 1 nColor{dup nColor le{$fsa exch 6 mul 1 add get nBandPos add
/nBandPos exch def}if}for nBandPos $fst div}for}if]>>/Extend[true true]>>}bd
/output_shading_gradient{@gs currentdict/$vectpat known{$vectpat not}{true}
ifelse{$ctm setmatrix}if wclip $fty 3 eq $fty 4 eq or{@gs $fsa 0 get
set_solid_fill F @gr}if Bbllx Bblly Bburx Bbury 1 index 3 index m 2 copy l 3
index 1 index l 3 index 3 index l @cp pop pop pop pop FillOverprint
safe_setoverprint create_gradient_shading_dict shfill @gr @np}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel21Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 425 425
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
126.26391 128.72069 298.34561 152.86025 @E
/$fm 1 def
 0 O 0 @g
0.1373 0.1216 0.1255  create_rgb_color set_solid_fill
156.46394 128.72069 m
151.19461 128.72069 L
148.34806 134.12183 L
135.47197 134.12183 L
132.62598 128.72069 L
126.26391 128.72069 L
130.59609 136.76797 134.92800 144.81553 139.26472 152.86025 C
144.68457 152.86025 L
157.71997 128.72069 L
156.46394 128.72069 L
@c
141.90803 146.30400 m
138.04469 139.01783 L
145.74671 139.01783 L
141.90803 146.30400 L
@c
165.85427 128.72069 m
160.96450 128.72069 L
160.96450 152.86025 L
166.82003 152.86025 L
177.13984 138.42454 L
187.36668 152.86025 L
193.18961 152.86025 L
193.18961 128.72069 L
187.54951 128.72069 L
187.54951 144.23301 L
179.40501 132.56929 L
174.78397 132.56929 L
166.60431 144.10006 L
166.60431 128.72069 L
165.85427 128.72069 L
@c
217.54800 128.72069 m
200.33603 128.72069 L
200.33603 152.86025 L
217.06299 152.86025 L
219.55181 152.86025 221.58227 152.26639 223.00554 151.16995 C
224.47389 150.03836 225.28403 148.40192 225.28403 146.35332 C
225.28403 145.00091 224.89313 143.74658 224.11191 142.70457 C
223.70797 142.16598 223.20170 141.68863 222.59339 141.28866 C
223.49622 140.86403 224.24598 140.31071 224.83020 139.64513 C
225.78378 138.55918 226.28665 137.19373 226.28665 135.61569 C
226.28665 133.43584 225.46403 131.68998 223.89959 130.48639 C
222.41254 129.34290 220.26983 128.72069 217.54800 128.72069 C
@c
218.70028 147.46535 m
218.17276 147.87950 217.34816 148.09351 216.25455 148.09351 C
206.17002 148.09351 L
206.17002 143.31912 L
216.28687 143.31912 L
217.29430 143.31912 218.11209 143.55865 218.65578 144.00737 C
219.14079 144.40762 219.41773 145.00403 219.41773 145.77109 C
219.41773 146.52737 219.17055 147.09628 218.70028 147.46535 C
@c
219.40611 137.81395 m
218.80148 138.28224 217.86973 138.52035 216.67493 138.52035 C
206.17002 138.52035 L
206.17002 133.48743 L
216.77187 133.48743 L
218.00381 133.48743 218.89247 133.71562 219.45487 134.14394 C
219.97276 134.53824 220.22617 135.14712 220.22617 135.93912 C
220.22617 136.77676 219.93647 137.40321 219.40611 137.81395 C
@c
236.93216 128.72069 m
231.75128 128.72069 L
231.75128 152.86025 L
237.68220 152.86025 L
237.68220 128.72069 L
236.93216 128.72069 L
@c
250.00951 128.72069 m
244.82863 128.72069 L
244.82863 152.86025 L
260.48835 152.86025 L
263.31591 152.86025 265.53005 152.13657 267.06189 150.81477 C
268.65411 149.44110 269.48551 147.45600 269.48551 144.99496 C
269.48551 142.76665 268.74142 140.92413 267.33713 139.58872 C
266.25798 138.56230 264.79843 137.85194 262.99899 137.51433 C
271.16447 128.72069 L
263.59002 128.72069 L
255.92485 137.03244 L
250.75956 137.03244 L
250.75956 128.72069 L
250.00951 128.72069 L
@c
262.67414 147.15354 m
262.04939 147.66775 261.06917 147.93165 259.74454 147.93165 C
250.75956 147.93165 L
250.75956 141.96076 L
259.74454 141.96076 L
261.04479 141.96076 262.02784 142.22835 262.66252 142.74595 C
263.24787 143.22331 263.55458 143.95663 263.55458 144.93005 C
263.55458 145.92784 263.25780 146.67364 262.67414 147.15354 C
@c
297.59556 128.72069 m
275.24126 128.72069 L
275.24126 152.86025 L
298.11940 152.86025 L
298.11940 147.93165 L
281.07524 147.93165 L
281.07524 143.48098 L
296.30806 143.48098 L
296.30806 138.58498 L
281.07524 138.58498 L
281.07524 133.64901 L
298.34561 133.64901 L
298.34561 128.72069 L
297.59556 128.72069 L
@c
F

@rax %Note: Object
209.81480 169.14331 254.58803 247.96687 @E
/$fm 1 def
 0 O 0 @g
0.3765 0.0000 1.0000  create_rgb_color set_solid_fill
237.90416 247.90564 m
254.50441 212.56923 L
254.66797 212.20186 254.58633 211.75313 254.30003 211.46740 C
210.63260 169.27512 L
210.30520 168.98995 209.81480 169.19376 209.81480 169.64249 C
209.81480 208.40712 L
237.33156 234.97087 L
237.53622 235.13386 237.61786 235.41987 237.61786 235.66450 C
237.69950 247.90564 L
237.69950 247.98728 237.86306 247.98728 237.90416 247.90564 C
@c
F

@rax %Note: Object
209.81452 169.14331 254.58803 235.10353 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.3765 0.0000 1.0000  create_rgb_color  0 0 0 0.650000 0.000000
0.1961 0.0000 0.5255  create_rgb_color  128 0 0 0.000000 0.000000
] 2 128 2 234.63638 196.82476 212.15140 208.10580 0.35 0.00 0.00 153.36 -0.24 0.56 0.50 set_gradient
209.81452 208.40683 m
209.81452 169.64220 L
209.81452 169.19405 210.30548 168.98967 210.63231 169.27540 C
210.63231 169.27540 L
254.29975 211.46712 L
254.58661 211.75285 254.66769 212.20157 254.50469 212.56894 C
254.50469 212.56894 L
237.45600 235.10353 L
209.81452 208.40683 L
@c
F

@rax %Note: Object
237.45600 212.00457 254.58775 248.01024 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.4157 0.0392 1.0000  create_rgb_color  0 0 0 0.500000 0.000000
0.4157 0.0392 1.0000  create_rgb_color  13 0 0 0.570000 0.000000
0.6627 0.2902 1.0000  create_rgb_color  102 0 0 0.500000 0.000000
0.6627 0.2902 1.0000  create_rgb_color  13 0 0 0.000000 0.000000
] 4 128 2 238.47647 251.13798 245.77597 224.50535 0.26 0.00 0.00 -74.67 -0.70 1.61 0.45 set_gradient
237.79020 248.01024 m
237.78822 248.01024 L
237.78624 248.01024 L
237.78397 248.01024 L
237.73323 248.00910 237.68532 247.97849 237.68532 247.91244 C
237.68532 247.91244 L
237.61616 235.67301 L
237.61616 235.51002 237.57846 235.26680 237.45600 235.10353 C
254.57159 212.00457 L
254.61269 212.20894 254.57159 212.41276 254.48967 212.61713 C
254.48967 212.61713 L
237.88942 247.95354 L
237.87184 247.98898 237.83102 248.00910 237.79020 248.01024 C
237.79020 248.01024 L
@c
F

@rax %Note: Object
238.17770 212.00457 254.58775 234.12983 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.5765 0.2078 0.9961  create_rgb_color  0 0 0 0.030000 0.000000
0.7490 0.4510 1.0000  create_rgb_color  128 0 0 0.000000 0.000000
] 2 128 2 238.77468 234.06548 254.35843 212.63301 0.03 0.00 0.00 -53.98 -0.30 1.61 1.14 set_gradient
254.57159 212.00457 m
254.61269 212.20894 254.57159 212.41276 254.48967 212.61713 C
254.48967 212.61713 L
253.63106 214.45257 L
238.17770 234.12983 L
254.57159 212.00457 L
@c
F

@rax %Note: Object
172.99644 228.95688 198.65877 277.72611 @E
/$fm 1 def
 0 O 0 @g
0.3765 0.0000 1.0000  create_rgb_color set_solid_fill
198.65225 277.57049 m
190.84252 255.45458 L
190.76117 255.20939 190.76117 254.92422 190.88362 254.67959 C
198.16186 240.35698 L
178.12687 229.01301 L
177.88139 228.89083 177.55427 228.97247 177.43153 229.21710 C
173.09735 238.23496 L
172.93380 238.56123 172.97490 238.88806 173.17956 239.17351 C
198.44759 277.69323 L
198.52980 277.77458 198.69335 277.69323 198.65225 277.57049 C
@c
F

@rax %Note: Object
174.23178 240.77112 198.65906 277.72583 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.4157 0.0392 1.0000  create_rgb_color  0 0 0 0.530000 0.000000
0.6863 0.3137 1.0000  create_rgb_color  124 0 0 0.500000 0.000000
0.6863 0.3137 1.0000  create_rgb_color  4 0 0 0.000000 0.000000
] 3 128 2 200.38167 275.45301 176.55591 238.96545 0.06 0.00 0.00 -123.14 0.43 1.78 1.08 set_gradient
198.53291 277.72583 m
198.52498 277.72583 L
198.49720 277.72498 198.46942 277.71477 198.44787 277.69323 C
198.44787 277.69323 L
174.25899 240.81959 L
174.23178 240.77112 L
190.84280 255.45458 L
190.89524 255.60340 L
190.89524 255.60397 190.89524 255.60397 190.89581 255.60397 C
190.89581 255.60397 L
190.89921 255.61417 L
198.65254 277.57049 L
198.68117 277.65751 198.60746 277.72356 198.53291 277.72583 C
@c
F

@rax %Note: Object
172.99672 228.95688 198.16157 255.45458 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.3765 0.0000 1.0000  create_rgb_color  0 0 0 0.500000 0.000000
0.2431 0.0000 0.6471  create_rgb_color  128 0 0 0.000000 0.000000
] 2 128 2 184.27776 247.59269 186.53698 234.25597 0.29 0.00 0.00 -80.38 -0.02 0.54 0.49 set_gradient
173.17928 239.17323 m
172.97518 238.88806 172.93408 238.56180 173.09764 238.23496 C
173.09764 238.23496 L
177.43124 229.21710 L
177.55455 228.97247 177.88110 228.89083 178.12715 229.01357 C
178.12715 229.01357 L
198.16157 240.35698 L
190.88391 254.67902 L
190.76088 254.92422 190.76088 255.20995 190.84280 255.45458 C
173.17928 239.17323 L
@c
F

@rax %Note: Object
170.37468 179.70151 228.68419 295.64277 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.5961 0.2196 1.0000  create_rgb_color  0 0 0 0.500000 0.000000
0.6863 0.3137 1.0000  create_rgb_color  41 0 0 0.500000 0.000000
0.3765 0.0000 1.0000  create_rgb_color  87 0 0 0.500000 0.000000
] 3 128 2 139.52976 171.64545 234.05102 195.96784 0.14 0.00 0.00 14.43 0.19 1.67 1.60 set_gradient
209.81452 295.44321 m
209.81452 261.04507 L
209.81452 260.84098 209.73231 260.63660 209.61043 260.47332 C
209.61043 260.47332 L
170.56261 207.54992 L
170.27631 207.18283 170.31713 206.61194 170.68507 206.28510 C
170.68507 206.28510 L
198.07994 179.84381 L
198.32513 179.59918 198.73417 179.68082 198.85663 180.00680 C
198.85663 180.00680 L
228.62239 249.66000 L
228.70460 249.86466 228.70460 250.14983 228.62239 250.39474 C
228.62239 250.39474 L
210.18246 295.52428 L
210.14957 295.60677 210.08296 295.64277 210.01578 295.64277 C
210.01578 295.64277 L
209.91628 295.64277 209.81452 295.56482 209.81452 295.44321 C
@c
F

@rax %Note: Object
209.76350 250.95827 228.37975 295.64277 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.4353 0.0588 1.0000  create_rgb_color  0 0 0 0.500000 0.000000
0.6627 0.2902 1.0000  create_rgb_color  90 0 0 0.500000 0.000000
0.6627 0.2902 1.0000  create_rgb_color  38 0 0 0.500000 0.000000
] 3 128 2 207.70044 283.39795 225.99808 240.94800 0.17 0.00 0.00 -66.68 -0.99 2.48 0.75 set_gradient
210.00643 295.64277 m
210.00331 295.64277 L
209.90353 295.64277 209.80205 295.56482 209.80205 295.44321 C
209.81452 261.04507 L
209.81452 260.96287 209.79524 260.85345 209.76350 260.75934 C
228.37975 250.95827 L
210.16998 295.52428 L
210.13739 295.60564 210.07247 295.64164 210.00643 295.64277 C
@c
209.76350 260.75934 m
213.31814 258.71896 L
209.76350 260.75934 L
@c
F

@rax %Note: Object
209.76350 250.01263 228.68674 260.75934 @E
/$fm 0 def
 0 O 0 @g
/DocRgbSpace  load /GradientColorSpace xd
/GradientDevicen false def
[
0.6824 0.3765 1.0000  create_rgb_color  0 0 0 0.030000 0.000000
0.7490 0.4510 1.0000  create_rgb_color  128 0 0 0.000000 0.000000
] 2 128 2 210.04299 260.68054 228.41291 250.55546 0.02 0.00 0.00 -28.86 0.60 1.11 1.65 set_gradient
228.68674 250.01263 m
228.68674 250.01830 L
228.68617 250.13877 228.66917 250.25471 228.62891 250.37518 C
228.62891 250.37518 L
228.39250 250.95827 L
209.76350 260.75934 L
213.33090 258.71896 L
228.68674 250.01263 L
@c
F

@rax %Note: Object
173.19203 239.19307 190.84280 255.45458 @E
/$fm 1 def
 0 O 0 @g
0.7059 0.4235 0.9529  create_rgb_color set_solid_fill
174.22072 240.76120 m
173.19203 239.19307 L
190.84280 255.45458 L
174.22072 240.76120 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel21Dict 21.0 0
%%EOF
